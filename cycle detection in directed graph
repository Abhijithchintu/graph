int flag = 0;
//we are keeping a vector for visited values ,if vis == 1 and it comes again that means there is cycle .
void cyc(int s,vector<vector<int>>&v,vector<int>&vis){
    vis[s] = 1;
    if(flag){
        return ;
    }
    for(auto x : v[s]){
        if(vis[x]==1){
            flag = 1;
            return ;
        }
        else if(vis[x]==0){
            
            cyc(x,v,vis);
        }
    }
    vis[s] = 2;
}
int Solution::solve(int n, vector<vector<int> > &B) {
    vector<int>vis(n+1);
    int m = B.size();
    vector<vector<int>>v(n+1);
    for(int i=0;i<m;i++){
        v[B[i][0]].push_back(B[i][1]);
        
    }
    flag = 0;
    for(int i=1;i<=n;i++){
        if(vis[i]==0){
            cyc(i,v,vis);
            vis[i] = 2;
            if(flag){
                return 1;
            }
        }
    }
    return 0;
    
}
